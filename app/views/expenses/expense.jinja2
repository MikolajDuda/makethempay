<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>
            Group
        </title>
        {{ JSGlue.include() }}
        <script type="module">
            import { form_to_obj, async_json_request } from "/static/js/form_utils.js"
            import { add_alert } from "/static/js/alerts.js"
            import { money_to_int, int_to_money } from "/static/js/money.js"

                function render_debtor_obj(obj) {
                    let display_name = obj["user_display_name"]
                    let amount_owed = obj["amount_owed"]
                    let amount = obj["amount_owed"] - obj["amount_paid"]
                    let debt_id = obj["id"]

                    let item = document.createElement("li")
                    item.className = "list-group-item"
                    let div1 = document.createElement("div")
                    div1.className = "row"
                    let div2 = document.createElement("div")
                    div2.className = "col-2"
                    let p2 = document.createElement("p")
                    p2.className = "header"
                    p2.innerHTML = display_name
                    div2.appendChild(p2)
                    let div3 = document.createElement("div")
                    div3.className = "col-3"
                    let p3 = document.createElement("p")
                    p3.innerHTML = int_to_money(amount_owed)
                    div3.appendChild(p3)
                    let div4 = document.createElement("div")
                    div4.className = "col-3"
                    let p4 = document.createElement("p")
                    p4.innerHTML = int_to_money(amount)
                    div4.appendChild(p4)
                    let div5 = document.createElement("div")
                    let form = document.createElement('form')
                    form.setAttribute('id', "pay_form")
                    form.dataset.id = debt_id
                    let form_div = document.createElement('div')
                    form_div.className = "col-3"
                    let input1 = document.createElement("input")
                    input1.name = "amount_paid"
                    input1.type = "number"
                    input1.min = 0
                    input1.max = amount / 100
                    input1.placeholder = int_to_money(amount)
                    let div6 = document.createElement("div")
                    let butt1 = document.createElement("button")
                    butt1.className = "w-75 btn btn-sm btn-success pay_button"
                    butt1.type = "submit"
                    butt1.innerHTML = "PAY"

                    if (amount != 0) {
                        div5.appendChild(input1)
                        div6.appendChild(butt1)
                        form.appendChild(div5)
                        form.appendChild(div6)
                        form_div.appendChild(form)
                    } else {
                        let p_already_paid = document.createElement("p")
                        p_already_paid.innerHTML = "This debt is already paid"
                        div5.appendChild(p_already_paid)
                    }

                    div1.appendChild(div2)
                    div1.appendChild(div3)
                    div1.appendChild(div4)
                    div1.appendChild(form_div)
                    item.appendChild(div1)

                    return item
                }

            window.onload = () => {
                let expense_id = {{ expense_id }}
                let participants_list = document.getElementById("participants")
                let title = document.getElementById('expense-title')
                let description = document.getElementById('expense-description')
                let pay_buttons = document.getElementsByClassName("pay_button")
                let pay_form = document.getElementById("pay_form")

                function participants_list_ui_refresh(participants) {
                    participants_list.innerHTML = ""

                    for (let obj of participants) {
                        participants_list.appendChild(render_debtor_obj(obj))
                    }
                }

                function get_participants_list_and_update_ui() {
                    let url = Flask.url_for('debts.api_get_debts', {'expense_id': expense_id})
                    async_json_request(url, 'GET', null, (data) => {
                        console.log(data)
                        if(!data.success) {
                            add_alert(data.error)
                            return
                        }

                        if(!data.result) {
                            add_alert("Invalid response from server")
                            return
                        }

                        participants_list_ui_refresh(data.result)
                    })
                }

                function display_expense_description() {
                    let url = Flask.url_for('expenses.api_get_expense_by_id', {'expense_id': expense_id})
                     async_json_request(url, 'GET', null, (data) => {
                        if(!data.success) {
                            add_alert(data.error)
                            return
                        }

                        if(!data.result) {
                            add_alert("Invalid response from server")
                            return
                        }

                        title.innerHTML=data.result["name"]
                        description.innerHTML=data.result["description"]
                        
                    })
                }
                
                {# for(let pay_butt of pay_buttons) {
                    pay_butt.onclick = (e) => {
                        e.preventDefault()
                        e.stopPropagation()

                        let debt_id = pay_butt.id

                        let url = Flask.url_for('debts.api_update_amount_paid')

                        async_json_request(url, 'POST', JSON.stringify(
                            {
                                "debt_id": debt_id
                                
                        }
                        ), (data) => {
                            if(!data.success) {
                                add_alert(data.error)
                                return
                            }

                            if(!data.result) {
                                add_alert("Invalid response from server")
                                return
                            }

                            document.getElementById("group-access-token").innerHTML=data.result["access_token"]
                        })
                    }
                } #}

                {# pay_form.onsubmit = (e) => {
                    e.preventDefault()
                    e.stopPropagation()

                    let requestData = form_to_obj(pay_form)
                    requestData['debt_id'] = pay_form.dataset.id

                    let url = Flask.url_for('debts.api_update_amount_paid')

                    async_json_request(url, 'POST', JSON.stringify(requestData), (data) => {
                        console.log(data)

                        if(!data.success) {
                            add_alert(data.error)
                            return
                        }

                        if(!data.result) {
                            add_alert("Invalid response from server")
                            return
                        }
                        
                        add_alert("You have successfully joined into the group!")
                        get_group_list_and_update_ui()
                    })
                } #}

                display_expense_description()
                get_participants_list_and_update_ui()
            }
           
        </script>

        <!-- Import bootstrap -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
        <link rel="stylesheet" href="/static/css/navbar.css" type="text/css">
    </head>

    <body>
        {% include "include/navbar.inc.jinja2" %}
        {% include "include/display_alerts.inc.jinja2" %}

        <div class="container" style="margin-top:110px;">
            <div class="row" style="word-wrap: break-word;">
                <p class="h2" id="expense-title" style="text-align: center;"></p>
                <p class="h5" id="expense-description" style="font-style: italic; margin-bottom: 35px;"></p>
            </div>
            <div class="row">
                <ul>
                    <div class="row" style="word-wrap: break-word;">
                        <div class = "col-2"><p>Participant name</p></div>
                        <div class = "col-3"><p>Owed money</p></div>
                        <div class = "col-3"><p>Remaining money</p></div>
                        <div class = "col-4"><p>How much do you want to pay?</p></div>
                    </div>
                </ul>
            </div>
            <div class="row">
                <ul id="participants"></ul> 
            </div>
        </div>
        <!-- Bootstrap stuff -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW" crossorigin="anonymous"></script>
    </body>
</html>
